name: RELEASE_ZWALLETCLI

on:
  workflow_dispatch:
    inputs:
      fixed_tag:
        description: 'Type yes For Building With Tag v0.0.0 from master & v1.1.1 from staging'
        default: 'no'
        required: true
      version_tag:
        description: 'Input major or miner for release type. Default is patch'
        default: 'patch'
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GOSDK }}
  
jobs:
  build-linux:
    name: Build-Linux
    runs-on: [self-hosted, build]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14

<<<<<<< HEAD
=======
    - name: Install
      run: make install
      
>>>>>>> 3552c8b24297971131b546812214b6c34a5bff81
    - name: Get Branch
      id: get_version
      run: |
        VERSION=$(echo ${GITHUB_REF#refs/heads/}) 
        echo ::set-output name=TAG::${VERSION}

    - name: Zip release
<<<<<<< HEAD
      run: |
        mkdir zwallet
        tar -czvf zwallet-linux.tar.gz ./zwallet
=======
      run: tar -czvf zwallet-linux.tar.gz ./zwallet
>>>>>>> 3552c8b24297971131b546812214b6c34a5bff81

############################### v1.1.1 #############################

    - name: Delete Old Release & Tag v1.1.1
      if: github.event.inputs.fixed_tag == 'yes' && steps.get_version.outputs.TAG == 'staging'
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true # default: false
        tag_name: v1.1.1 # tag name to delete
        repo: 0chain/zwalletcli # target repo (optional). defaults to repo running this action

    - name: Create Release for Fixed v1.1.1
      if: github.event.inputs.fixed_tag == 'yes' && steps.get_version.outputs.TAG == 'staging'
      uses: zendesk/action-create-release@v1
      with:
        tag_name: v1.1.1
        release_name: v1.1.1
        draft: false
        prerelease: false

############################### v0.0.0 #############################

    - name: Delete Old Release & Tag v0.0.0
      if: github.event.inputs.fixed_tag == 'yes' && steps.get_version.outputs.TAG == 'master'
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true # default: false
        tag_name: v0.0.0 # tag name to delete
        repo: 0chain/zwalletcli # target repo (optional). defaults to repo running this action
        
    - name: Create Release for Fixed v0.0.0
      if: github.event.inputs.fixed_tag == 'yes' && steps.get_version.outputs.TAG == 'master'
      uses: zendesk/action-create-release@v1
      with:
        tag_name: v0.0.0
        release_name: v0.0.0
        draft: false
        prerelease: false
        
############################### v*.*.* #############################

    - name: Create Release for Next Version
      id: create_release_next_version
<<<<<<< HEAD
      if: github.event.inputs.fixed_tag == 'no'
=======
>>>>>>> 3552c8b24297971131b546812214b6c34a5bff81
      uses: zendesk/action-create-release@v1 
      with:
        draft: false
        prerelease: false
        auto_increment_type: ${{ github.event.inputs.version_tag }}
        tag_schema: semantic
        
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: zwallet-linux
        path: zwallet
        retention-days: 5
        
  build-windows:
    name: Build-Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
   
    - name: Install
      run: make install
<<<<<<< HEAD

    - name: Get Branch
      id: get_version
      run: |
        VERSION=$(echo ${GITHUB_REF#refs/heads/}) 
        echo ::set-output name=TAG::${VERSION}
=======
>>>>>>> 3552c8b24297971131b546812214b6c34a5bff81
        
    - name: Zip release
      run: |
        copy zwallet zwallet.exe
        7z a zwallet-windows.zip zwallet.exe

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: zwallet-windows
        path: zwallet
        retention-days: 5
  
  build-macos:
    name: Build-MacOS
    
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Install
      run: make install

    - name: Get Branch
      id: get_version
      run: |
        VERSION=$(echo ${GITHUB_REF#refs/heads/}) 
        echo ::set-output name=TAG::${VERSION}
        
    - name: Zip release
<<<<<<< HEAD
      run: |
        mkdir zwallet
        tar -czf zwallet-macos.tar.gz ./zwallet
=======
      run: tar -czvf zwallet-macos.tar.gz ./zwallet
>>>>>>> 3552c8b24297971131b546812214b6c34a5bff81

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: zwallet-macos
        path: zwallet
        retention-days: 5
      
